{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Patterns } from '../../../shared/constant/validation-patterns.const';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CirLoginComponent_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \" Please enter email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CirLoginComponent_span_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \" Please enter valid email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CirLoginComponent_span_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \" Please enter password \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CirLoginComponent_span_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \" Password must be contain alphabet (1 capital), number and @ \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class CirLoginComponent {\n  constructor(router) {\n    this.router = router;\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.pattern(Patterns.email)]),\n      password: new FormControl('', [Validators.required, Validators.pattern(Patterns.password)])\n    });\n  }\n  ngOnInit() {}\n  // Function to be used for login\n  login() {\n    if (!this.loginForm.valid) {\n      return;\n    }\n    console.log('login details', this.loginForm.value);\n    this.router.navigate(['/cir/cir-register']);\n  }\n  static #_ = this.ɵfac = function CirLoginComponent_Factory(t) {\n    return new (t || CirLoginComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CirLoginComponent,\n    selectors: [[\"app-cir-login\"]],\n    decls: 36,\n    vars: 5,\n    consts: [[1, \"hold-transition\", \"login-page\"], [1, \"login-box\"], [1, \"card\", \"card-outline\", \"card-primary\"], [1, \"card-header\", \"text-center\"], [1, \"h1\"], [1, \"card-body\"], [1, \"login-box-msg\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"input-group\", \"mb-0\"], [\"type\", \"email\", \"placeholder\", \"Email\", \"formControlName\", \"email\", \"required\", \"\", 1, \"form-control\"], [1, \"input-group-append\"], [1, \"input-group-text\"], [1, \"fas\", \"fa-envelope\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\", \"required\", \"\", 1, \"form-control\"], [1, \"fas\", \"fa-eye\"], [1, \"row\"], [1, \"col-8\"], [1, \"col-4\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\"], [1, \"mb-4\", \"mt-2\", \"text-center\"], [\"routerLink\", \"/cir/cir-register\", 1, \"text-center\"], [1, \"text-danger\"]],\n    template: function CirLoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"a\", 4)(5, \"b\");\n        i0.ɵɵtext(6, \"CIR\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(7, \" Login\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 5)(9, \"p\", 6);\n        i0.ɵɵtext(10, \"Sign in to start your session\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"form\", 7);\n        i0.ɵɵlistener(\"ngSubmit\", function CirLoginComponent_Template_form_ngSubmit_11_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵelementStart(12, \"div\", 8)(13, \"div\", 9);\n        i0.ɵɵelement(14, \"input\", 10);\n        i0.ɵɵelementStart(15, \"div\", 11)(16, \"div\", 12);\n        i0.ɵɵelement(17, \"span\", 13);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(18, CirLoginComponent_span_18_Template, 2, 0, \"span\", 14);\n        i0.ɵɵtemplate(19, CirLoginComponent_span_19_Template, 2, 0, \"span\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 8)(21, \"div\", 9);\n        i0.ɵɵelement(22, \"input\", 15);\n        i0.ɵɵelementStart(23, \"div\", 11)(24, \"div\", 12);\n        i0.ɵɵelement(25, \"span\", 16);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(26, CirLoginComponent_span_26_Template, 2, 0, \"span\", 14);\n        i0.ɵɵtemplate(27, CirLoginComponent_span_27_Template, 2, 0, \"span\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 17);\n        i0.ɵɵelement(29, \"div\", 18);\n        i0.ɵɵelementStart(30, \"div\", 19)(31, \"button\", 20);\n        i0.ɵɵtext(32, \"Sign In\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(33, \"p\", 21)(34, \"a\", 22);\n        i0.ɵɵtext(35, \"Register a new account ?\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", (ctx.loginForm.controls == null ? null : ctx.loginForm.controls[\"email\"] == null ? null : ctx.loginForm.controls[\"email\"].touched) && (ctx.loginForm.controls == null ? null : ctx.loginForm.controls[\"email\"] == null ? null : ctx.loginForm.controls[\"email\"].errors == null ? null : ctx.loginForm.controls[\"email\"].errors[\"required\"]));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.loginForm.controls == null ? null : ctx.loginForm.controls[\"email\"] == null ? null : ctx.loginForm.controls[\"email\"].touched) && (ctx.loginForm.controls == null ? null : ctx.loginForm.controls[\"email\"] == null ? null : ctx.loginForm.controls[\"email\"].errors == null ? null : ctx.loginForm.controls[\"email\"].errors[\"pattern\"]));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", (ctx.loginForm.controls == null ? null : ctx.loginForm.controls[\"password\"] == null ? null : ctx.loginForm.controls[\"password\"].touched) && (ctx.loginForm.controls == null ? null : ctx.loginForm.controls[\"password\"] == null ? null : ctx.loginForm.controls[\"password\"].errors == null ? null : ctx.loginForm.controls[\"password\"].errors[\"required\"]));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.loginForm.controls == null ? null : ctx.loginForm.controls[\"password\"] == null ? null : ctx.loginForm.controls[\"password\"].touched) && (ctx.loginForm.controls == null ? null : ctx.loginForm.controls[\"password\"] == null ? null : ctx.loginForm.controls[\"password\"].errors == null ? null : ctx.loginForm.controls[\"password\"].errors[\"pattern\"]));\n      }\n    },\n    dependencies: [i2.NgIf, i1.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","Patterns","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","CirLoginComponent","constructor","router","loginForm","email","required","pattern","password","ngOnInit","login","valid","console","log","value","navigate","_","ɵɵdirectiveInject","i1","Router","_2","selectors","decls","vars","consts","template","CirLoginComponent_Template","rf","ctx","ɵɵlistener","CirLoginComponent_Template_form_ngSubmit_11_listener","ɵɵelement","ɵɵtemplate","CirLoginComponent_span_18_Template","CirLoginComponent_span_19_Template","CirLoginComponent_span_26_Template","CirLoginComponent_span_27_Template","ɵɵadvance","ɵɵproperty","controls","touched","errors"],"sources":["D:\\WHYQ_PROJECTS\\Rms_Frontend\\src\\app\\module\\cir\\cir-login\\cir-login.component.ts","D:\\WHYQ_PROJECTS\\Rms_Frontend\\src\\app\\module\\cir\\cir-login\\cir-login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Patterns } from '../../../shared/constant/validation-patterns.const';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-cir-login',\r\n  templateUrl: './cir-login.component.html',\r\n  styleUrls: ['./cir-login.component.css']\r\n})\r\nexport class CirLoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n\r\n  constructor(\r\n    private router: Router\r\n  ) {\r\n    this.loginForm = new FormGroup({\r\n      email: new FormControl('', [Validators.required, Validators.pattern(Patterns.email)]),\r\n      password: new FormControl('', [Validators.required, Validators.pattern(Patterns.password)])\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  // Function to be used for login\r\n  login() {\r\n    if (!this.loginForm.valid) {\r\n      return\r\n    }\r\n    console.log('login details', this.loginForm.value)\r\n    this.router.navigate(['/cir/cir-register']);\r\n  }\r\n}\r\n","<div class=\"hold-transition login-page\">\r\n  <div class=\"login-box\">\r\n    <!-- /.login-logo -->\r\n    <div class=\"card card-outline card-primary\">\r\n      <div class=\"card-header text-center\">\r\n        <a class=\"h1\"><b>CIR</b> Login</a>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <p class=\"login-box-msg\">Sign in to start your session</p>\r\n\r\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\r\n          <div class=\"mb-3\">\r\n              <div class=\"input-group mb-0\">\r\n                <input type=\"email\" class=\"form-control\" placeholder=\"Email\" formControlName=\"email\" required>\r\n                <div class=\"input-group-append\">\r\n                  <div class=\"input-group-text\">\r\n                    <span class=\"fas fa-envelope\"></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <span class=\"text-danger\" *ngIf=\"\r\n                loginForm.controls?.['email']?.touched &&\r\n                loginForm.controls?.['email']?.errors?.['required']\">\r\n                Please enter email\r\n              </span>\r\n              <span class=\"text-danger\" *ngIf=\"\r\n                loginForm.controls?.['email']?.touched &&\r\n                loginForm.controls?.['email']?.errors?.['pattern']\">\r\n                    Please enter valid email\r\n              </span>\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <div class=\"input-group mb-0\">\r\n              <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"password\" required>\r\n              <div class=\"input-group-append\">\r\n                <div class=\"input-group-text\">\r\n                  <span class=\"fas fa-eye\"></span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <span class=\"text-danger\" *ngIf=\"\r\n                loginForm.controls?.['password']?.touched &&\r\n                loginForm.controls?.['password']?.errors?.['required']\">\r\n                Please enter password\r\n              </span>\r\n              <span class=\"text-danger\" *ngIf=\"\r\n                loginForm.controls?.['password']?.touched &&\r\n                loginForm.controls?.['password']?.errors?.['pattern']\">\r\n                    Password must be contain alphabet (1 capital), number and @\r\n              </span>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-8\">\r\n              <!-- Blank -->\r\n            </div>\r\n            <div class=\"col-4\">\r\n              <button type=\"submit\" class=\"btn btn-primary btn-block\">Sign In</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n\r\n        <p class=\"mb-4 mt-2 text-center\">\r\n          <a class=\"text-center\" routerLink=\"/cir/cir-register\">Register a new account ?</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}